version: '3.1' # version of docker compose
services:
  # هنا ببدا اعرف اللحاجات اللى هستخدمها زى مثلا لو هستخدم داتابيز دى كدة هتكون serviceوهكذا
  node-app:
    # هنا انا عندى service واحدة بيتاعت البرنامج وسميتها node-app
    container_name: express-node-app-container # هنا بقوله لما تيجى ترن الكونينر سميه كذا
    # build: .                # هنا بقوله يدور على الدوكر فايل علشان يعمل build منه
    # volumes:
    #   - ./src:/app/src:ro    # بمعنى ابسط انا بدل ما افضل اكتب كوماند كتير علشان اعمل build and run for all conatinersهنا بعرف كل واحدة محتاجة اى
    ports:
      - 4000:3001
    # environment:
    #   - port=4000
    #   - NODE_ENV=production
    env_file:
      - ./.env
    depends_on:
      # - mongo
      - redis
      - postgres
  # mongo:
  #   image: mongo
  #   restart: always
  #   volumes:
  #     - mongo-db:/data/db   # /data/db this is path to store data in conatiner and i use volum here to i close conatiner and run any time later can found databases
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false
  #   depends_on:
  #     - mongo

  redis:
    image: redis
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-app

  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: example

volumes:
  mongo-db:
  postgres-db:

    # docker run --name my-express-app-conatiner -v /media/m-hassib/New\ Volume/new_node/src:/app/src:ro -d -p 4000:3001 express-node-app
    #انا بكتب الكوماند ده هنا باختصار





